{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","changedGoods","sort","good1","good2","sortByAlphabet","localeCompare","sortByLength","length","reverse","getChangedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAQKA,E,oFAAAA,K,8BAAAA,E,2BAAAA,E,YAAAA,M,KAmCE,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,SAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA7CR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAY,YAAOD,GAqBzB,OAnBIL,GACFM,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAML,EAASe,eACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAMd,EAASiB,aACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAaQ,UAGRR,EAmBcS,CAAgBnB,EAAiBI,EAAUE,GAEhE,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAaL,EAASe,iBAEtCS,QAAS,kBAAMlB,EAAYN,EAASe,iBAPtC,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAaL,EAASiB,eAEtCO,QAAS,kBAAMlB,EAAYN,EAASiB,eAPtC,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,WAILhB,GAHGD,IART,qBAkBe,KAAbF,GAAmBE,EAEjB,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAYN,EAASI,SACrBI,GAAc,IALlB,mBAYA,QAIN,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC7HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.22b13be7.chunk.js","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\ntype Good = string;\n\nenum SortType {\n  sortByAlphabet = 'alpabet sort',\n  sortByLength = 'length sort',\n  default = '',\n}\n\nfunction getChangedGoods(\n  goods: Good[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const changedGoods = [...goods];\n\n  if (sortType) {\n    changedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case (SortType.sortByAlphabet):\n          return good1.localeCompare(good2);\n\n        case (SortType.sortByLength):\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    changedGoods.reverse();\n  }\n\n  return changedGoods;\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.default);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getChangedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.sortByAlphabet },\n          )}\n          onClick={() => setSortType(SortType.sortByAlphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.sortByLength },\n          )}\n          onClick={() => setSortType(SortType.sortByLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => {\n            if (!isReversed) {\n              setIsReversed(true);\n            } else {\n              setIsReversed(false);\n            }\n          }}\n        >\n          Reverse\n        </button>\n\n        { sortType !== '' || isReversed\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortType(SortType.default);\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n          : (\n            null\n          )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}